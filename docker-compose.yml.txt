version: "3.8"

services:
  farm-manager-backend:
    container_name: farm-manager-backend
    image: fkaaziebu/farm-manager-prod:production
    restart: always
    ports:
      - "${APP_PORT}:3000"
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - DATABASE_HOST=postgres
      - REDIS_HOST=redis
    depends_on:
      postgres:
        condition: service_healthy
      farm-manager-redis:
        condition: service_healthy
    networks:
      - app-network

  postgres:
    container_name: postgres
    image: postgres:14-alpine
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  farm-manager-redis:
    container_name: farm-manager-redis
    image: redis:alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    restart: always
    env_file:
      - .env
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
    name: farm-manager-postgres-data
  redis-data:
    name: farm-manager-redis-data
